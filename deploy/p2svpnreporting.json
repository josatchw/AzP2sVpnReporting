{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.255.40792",
      "templateHash": "11583259514974100528"
    }
  },
  "parameters": {
    "resourceLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Resource Location"
      }
    },
    "functionProjectName": {
      "type": "string",
      "metadata": {
        "description": "function project name"
      }
    },
    "p2sGwName": {
      "type": "string",
      "metadata": {
        "description": "function project name"
      }
    },
    "p2sGwResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "function project name"
      }
    }
  },
  "functions": [],
  "variables": {
    "MGstorageAccountName": "[format('mg{0}{1}', parameters('functionProjectName'), uniqueString(resourceGroup().id))]",
    "APstorageAccountName": "[format('ap{0}{1}', parameters('functionProjectName'), uniqueString(resourceGroup().id))]",
    "hostingPlanName": "[format('apphp{0}{1}', parameters('functionProjectName'), uniqueString(resourceGroup().id))]",
    "appInsightsName": "[format('appin{0}{1}', parameters('functionProjectName'), uniqueString(resourceGroup().id))]",
    "functionAppName": "[format('app{0}', parameters('functionProjectName'))]",
    "keyVaultName": "[format('kv{0}', parameters('functionProjectName'))]",
    "secretNameP2svpnstatsconn": "secp2svpnstatsconn"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-04-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), variables('secretNameP2svpnstatsconn'))]",
      "properties": {
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('MGstorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('MGstorageAccountName')), '2021-06-01').keys[0].value)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('MGstorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', variables('MGstorageAccountName'), 'default', 'p2svpnstats')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('MGstorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('MGstorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}', variables('MGstorageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('MGstorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', variables('functionAppName'), 'web')]",
      "properties": {
        "powerShellVersion": "~7"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-04-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('resourceLocation')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": true,
        "enableSoftDelete": true,
        "sku": {
          "name": "standard",
          "family": "A"
        },
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2020-06-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get"
              ]
            },
            "tenantId": "[subscription().tenantId]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[variables('MGstorageAccountName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-06-01",
      "name": "[variables('APstorageAccountName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "tags": {
        "[format('hidden-link:/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Web/sites/{2}', subscription().id, resourceGroup().name, variables('functionAppName'))]": "Resource"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('resourceLocation')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('resourceLocation')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "clientAffinityEnabled": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('APstorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('APstorageAccountName')), '2021-06-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "powershell"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('APstorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('APstorageAccountName')), '2021-06-01').keys[0].value)]"
            },
            {
              "name": "kvName",
              "value": "[variables('keyVaultName')]"
            },
            {
              "name": "secretNameP2svpnstatsconn",
              "value": "[variables('secretNameP2svpnstatsconn')]"
            },
            {
              "name": "p2sgwResourceGroup",
              "value": "[parameters('p2sGwResourceGroup')]"
            },
            {
              "name": "p2sGwName",
              "value": "[parameters('p2sGwName')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('APstorageAccountName'))]"
      ]
    }
  ]
}